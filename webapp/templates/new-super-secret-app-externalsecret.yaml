{{- $secret := .Values.secret }}
{{- if and $secret (hasKey $secret "enabled") $secret.enabled (not $secret.useFakeForTesting) }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.secret.name }}
  labels:
    {{- include "webapp.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: {{ .Values.secret.store.kind }}
    name: {{ .Values.secret.store.name }}
  target: 
    name: {{ .Values.secret.name }}
    creationPolicy: Owner
  data:
    - secretKey: DB_HOST
      remoteRef:
        key: {{ .Values.secret.remoteKey }}
        property: dbHost
    - secretKey: DB_USERNAME
      remoteRef:
        key: {{ .Values.secret.remoteKey }}
        property: dbUser
    - secretKey: DB_PASSWORD
      remoteRef:
        key: {{ .Values.secret.remoteKey }}
        property: dbPass
{{- end }}


